% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rgcca.analyze.R
\name{rgcca.analyze}
\alias{rgcca.analyze}
\title{Performs a r/sgcca}
\usage{
rgcca.analyze(blocks, connection = 1 - diag(length(blocks)),
  response = NULL, superblock = TRUE, tau = rep(1, length(blocks)),
  ncomp = rep(2, length(blocks)), type = "rgcca", verbose = TRUE,
  scheme = "factorial", scale = TRUE, init = "svd", bias = TRUE,
  tol = 1e-08, sameBlockWeight = TRUE)
}
\arguments{
\item{blocks}{A list of matrix}

\item{connection}{A matrix giving the connection between the blocks}

\item{response}{An integer giving the index of a block considered as a 
response among a list of blocks}

\item{superblock}{A boolean giving the presence (TRUE) / absence (FALSE) of
a superblock}

\item{tau}{A vector of float (or character for 'optimal' setting) giving the
shrinkage parameter for covariance maximization}

\item{ncomp}{A vector of integer giving the number of component for each
blocks}

\item{type}{A character giving the type of analysis: c('rgcca', 'cpca-w', 'gcca', 'hpca', 'maxbet-b', 'maxbet', 'maxdiff-b','maxdiff', 'maxvar-a', 'maxvar-b', 'maxvar', 'niles', 'r-maxvar', 'rcon-pca',
'ridge-gca', 'sabscor', 'ssqcor', 'ssqcor', 'ssqcov-1', 'ssqcov-2', 'ssqcov',
'sum-pca', 'sumcor', 'sumcov-1', 'sumcov-2', 'sumcov.', 'sabscov', 'plspm','cca', 'ra', 'ifa', 'pls','pca')}

\item{verbose}{A boolean to display the progress of the analysis}

\item{scheme}{A character giving the link function for covariance maximization}

\item{scale}{A boolean scaling the blocks}

\item{init}{A character among "svd" (Singular Value Decompostion) or "random"
for alorithm initialization}

\item{bias}{A boolean for a biased variance estimator}

\item{tol}{An integer for the stopping value for convergence}

\item{sameBlockWeight}{If TRUE, all blocks are weighted by their own variance: all the blocks have the same weight}
}
\value{
A RGCCA object
}
\description{
Performs a r/sgcca with predefined parameters
}
\examples{
library(RGCCA)
data("Russett")
blocks = list(agriculture = Russett[, seq(3)], industry = Russett[, 4:5],
    politic = Russett[, 6:11] )
rgcca.analyze(blocks)
}
