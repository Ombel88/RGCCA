% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/imputeNN.R
\name{imputeNN}
\alias{imputeNN}
\title{imputeNN: Impute with k-Nearest Neighbors}
\usage{
imputeNN(A, k = 1, output = "mean", klim = NULL, scale = TRUE,
  sameBlockWeight = TRUE, superblock = TRUE)
}
\arguments{
\item{A}{A list of J blocks}

\item{k}{number of nearest neighbors. Can also be "all" or "auto"}

\item{output}{"mean","random" or "weightedMean". Corresponds to the kind of output required by the user. If "random" is chosen, the imputation will be done by selecting one neighbor among the k nearests. If "mean" is chosen, the imputation will be done by averaging all k-neighbors scores. If "weightedMean" is chosen, this average is weighted by the inverse of the distance.}

\item{klim}{Vector of two integers with klim(1)<klim(2). if k=auto, it is optimised between klim(1) and klim(2)}

\item{scale}{If scale = TRUE, each block is standardized to zero means and unit variances (default: TRUE).}

\item{sameBlockWeight}{A logical value indicating if the different blocks should have the same weight in the analysis (default, sameBlockWeight=TRUE)}

\item{superblock}{if TRUE the distance between two subjects is calculated on the superblock. If FALSE the distance is calculated by blocks.}
}
\value{
\item{A}{A list of the imputed blocks}
}
\description{
Impute with k-Nearest Neighbors
}
\details{
This method is used for the implementation of EM algorithm for missing data
}
