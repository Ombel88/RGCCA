% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/imputeNN.R
\name{imputeNN}
\alias{imputeNN}
\title{imputeNN: Impute with k-Nearest Neighbors}
\usage{
imputeNN(A, k = 1, output = "mean", klim = NULL, scale = TRUE,
  sameBlockWeight = TRUE, superblock = TRUE)
}
\arguments{
\item{A}{A list of J blocks}

\item{k}{number of nearest neighbors. Can also be "all" or "auto"}

\item{output}{"mean","random" or "weightedMean". Corresponds to the kind of output required by the user. If "random" is chosen, the imputation will be done by selecting one neighbor among the k nearests. If "mean" is chosen, the imputation will be done by averaging all k-neighbors scores. If "weightedMean" is chosen, this average is weighted by the inverse of the distance.}

\item{klim}{Vector of two integers with klim(1)<klim(2). if k=auto, it is optimised between klim(1) and klim(2)}

\item{scale}{If scale = TRUE, each block is standardized to zero means and unit variances (default: TRUE).}

\item{sameBlockWeight}{A logical value indicating if the different blocks should have the same weight in the analysis (default, sameBlockWeight=TRUE)}
}
\value{
\item{A}{A list of the imputed blocks}
}
\description{
Impute with k-Nearest Neighbors
}
\details{
This method is used for the implementation of EM algorithm for missing data
}
\examples{
 set.seed(42);X1=matrix(rnorm(500),100,5);
 set.seed(22);X2=matrix(rnorm(400),100,4);
 set.seed(2);X3=matrix(rnorm(700),100,7);
 X1[1,]=NA;X2[7,1]=NA;X2[5,1]=NA;X3[3,]=NA;X3[4,]=NA
 rownames(X1)=rownames(X2)=rownames(X3)=paste("S",1:100,sep="")
 colnames(X1)=paste("A",1:5,sep="");colnames(X2)=paste("A",6:9,sep="");
 colnames(X3)=paste("A",10:16,sep="")
A=list(X1,X2,X3)  
Ares=imputeNN(A,k=1,output="mean", klim=NULL,scale=TRUE,sameBlockWeight=TRUE)
}
