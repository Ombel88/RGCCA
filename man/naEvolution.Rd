% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/naEvolution.r
\name{naEvolution}
\alias{naEvolution}
\title{Evolution of fairness of rgcca with increasing missing values}
\usage{
naEvolution(A, prctNA = c(0.1, 0.2, 0.3), listMethods = c("mean"),
  typeNA = "block", ncomp = rep(1, length(A)),
  sameBlockWeight = TRUE, scale = TRUE, nDatasets = 20,
  tol = 1e-06, verbose = FALSE, scheme = "centroid", seed = NULL,
  C = matrix(1, length(A), length(A)) - diag(length(A)), tau = rep(1,
  length(A)))
}
\arguments{
\item{A}{A list of complete blocks}

\item{prctNA}{if number, percentage of missing data required for each block. If a vector with the same size as A, the percentage can be adapted for each block. If a list of values, this percent is calculated per variable}

\item{listMethods}{Vector containing the names of the methods to use : "complete","nipals","em","knn1","knn10"....}

\item{typeNA}{"block" if the missing data are blockwise or "ponc" if they are random}

\item{nDatasets}{Number of simulated datasets}

\item{seed}{NULL by default (no reproducibility). A number representing the seed (for reproducibility)}

\item{C, tau, scale, scheme, sameBlockWeight, ncomp, tol, verbose}{parameters of RGCCA}
}
\value{
\item{resultComparison}{A list of dataset indicators containg a list of rgcca with a list of criterion. }

\item{crit}{Convergence criterion : abs(1-obj_k/obj_{k-1})}

\item{obj}{Vector containing the mean square error between the predict values and the original non missing values at each iteration}
}
\description{
Analysis of the comparison of different NA methods on RGCCA for increasing percent of missing data in each block
}
\examples{
data(Russett)
library(parallel)
X_agric =as.matrix(Russett[,c("gini","farm","rent")])
X_ind = as.matrix(Russett[,c("gnpr","labo")])
X_polit = as.matrix(Russett[ , c("demostab", "dictator")])
A = list(agri=X_agric, ind=X_ind, polit=X_polit)
#ponctual
listResults=naEvolution(A=A,listMethods=c("complete","nipals","mean"),
prctNA=c(0.05,0.1,0.15,0.2,0.25,0.3,0.4),typeNA="ponc",ncomp=rep(1,3),
sameBlockWeight=FALSE)
plotEvol(listResults,output="a",barType = "stderr",ylim=c(0,0.2))
}
