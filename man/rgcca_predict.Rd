% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rgcca_predict.R
\name{rgcca_predict}
\alias{rgcca_predict}
\title{Predict RGCCA}
\usage{
rgcca_predict(rgcca_res, newA, type = "regression", fit = "lm",
  bloc_to_pred = NULL, y.train = NULL, y.test = NULL, bigA = NULL,
  new_scaled = TRUE, scale_size_bloc = TRUE)
}
\arguments{
\item{rgcca_res}{A list giving the results of a R/SGCCA}

\item{newA}{A list of either a dataframe/matrix or a vector giving the blocks to be predicted}

\item{type}{A character corresponding to the type of prediction among : regression or classification}

\item{fit}{A character giving the function used to compare the trained and the tested models}

\item{bloc_to_pred}{A character giving the block to predicted (must be the same name among train and test set)}

\item{y.train}{A dataframe or a matrix giving the block used as a response in the training}

\item{y.test}{A dataframe or a matrix giving the block to be predicted}

\item{bigA}{to permeform data reduction for cross-validation, the dataset where A and newA were extracted}

\item{new_scaled}{A boolean scaling the blocks to predict}

\item{scale_size_bloc}{A boolean giving the possibility to scale the blocks by the square root of their column number}
}
\description{
Predict a new block from a RGCCA
}
\examples{
library(RGCCA)
data("Russett")
blocks = list(
agriculture = Russett[, 1:3],
industry = Russett[, 4:5],
politic = Russett[, 6:11]
)
C = connection = matrix(c(0, 0, 1,
0, 0, 1,
1, 1, 0),
3, 3)
A = lapply(blocks, function(x) x[1:32,])
A = lapply(A, function(x) scale2 (x, bias = TRUE) / sqrt(NCOL(x)) )
object = rgcca(A, connection = C, tau = c(0.7,0.8,0.7),
    ncomp = c(3,2,4), superblock = FALSE, response = 3)
newA = lapply(blocks, function(x) x[-c(1:32),])
newA = lapply( newA, function(x) x[, sample(1:NCOL(x))] )
newA = sample(newA, length(newA))
bloc_to_pred = "industry"
y.train = kmeans(A[[bloc_to_pred]], 3)$cluster
y.test = kmeans(newA[[bloc_to_pred]], 3)$cluster
( res  = rgcca_predict(object, newA, bloc_to_pred = "industry", bigA = blocks) )
( res  = rgcca_predict(object, newA, "regression", "cor", "industry") )
( res  = rgcca_predict(object, newA) )
( res  = rgcca_predict(object, newA = newA, type = "regression", fit = "lm",
y.train = A[[bloc_to_pred]], y.test = newA[[bloc_to_pred]] ) )
library(MASS)
( res  = rgcca_predict(object, newA = newA, type = "classification",
fit = "lda", y.train = y.train, y.test = y.test ) )
}
